Day 1 

completed network related

VPC
Subnets
internet gateways
Route tables

DAY 2

NAT Gateways:

(instane/VM/server) all same

for DBs - we connect through NAT-Gateway ( as fully secured)

No one should connect from external internet , but DB needs to connect external internet( because few upates)

we will implement NAT GW
 
 steps:
 1.create a new subnet name it as Maruti-NAT-subnet- 10.1.5.0/24
 2.Create a NAT gateway and select subnet-1
 3.Create a new routing table named as Maruti-NAT-Table and add NAT subbnet to it
 4.Ctreate  route towards NAT gateway so that all trafic sent by DB server will go to NAT gateway
 5.Deploy VM1 in public subnet 10.1.1.100 and DB1 in private subnet 10.1.5.100
 6.Try to connect DB1 server using public ip and it should fail
 7.Login to VM1 and from there connect to DB1
 8.ping wwww.google.com from DB1 and it should work
 9.Prove the data is going through NAT gateway.
 
 DAY 3
 
 Security:
 
 NACL(NETWORK ACCESS CONTROL LIST) :Subnet level: STATELESS FIREWALL
 SECURITY GROUP: INSTANCE LEVEL:STATEFULL FIREWALL:
 
 
 IDS AND IPS
 INTRUSTION DETECTION AND PREVENTION
 
 
 
 https://www.youtube.com/watch?v=ZwIHHEpHltU
https://www.youtube.com/watch?v=P6HHJFAymN4
https://www.youtube.com/watch?v=krpzxDAlOdA

 
 
 DAY 22  RDS:
 
 SQL- 
 No SQL->Unstructured data eg Twitter ,FB etc..
 Eg: key/valupair
 Documents  and colletions
 
( NO SQL) AMAZON Dynamodb - is amzons DB - using keyvalue pair
mobile,web,gaming,adtecv, IOT etc..

Why they call it as serverless- it is managed by vendor not you.

API GW < ------ AWS LAMBD <------- DynamoDB

Serverless application: Internet --trafic-->AWS-API-GATEWAY(SendsData&Receive data-but cant wrtie to dynamoDB)-so we need->AWS LAMBDA--it will execute only scripts--> DynamoDB

import boto3
conn = boto3.client('ec2')

vpcs = conn.describe_vpcs()
vpcs = conn.describe_vpcs().get('vpcs',[])

to get vpc cider blocks

for vpc in vpcs
print(vpcs['vpcId'],'-->',vpc['CidrBlock'])

================================
1.Created dynamodb 
2.Create Lamda for pushing data to bookstore table ( also eg: could watch alarms for shuting down servers etc..)

use this code in lambda to push code:

-----------------------------USE PUT----------------------------
{
  "operation": "create",
  "payload":{
  	"TableName":"bookstore",
  	"Item":{
      	"bookid":10,
      	"author":"Robert K",
      	"bookname":"Rich Dad & Poor Dad",
      	"Location":"USA",
    	"State":"Hawaii"
  	}
  }
}
 -----------------USE POST-----------------------------
{
  "operation": "read",
  "payload":{
  	"TableName":"bookstore",
  	"Key":{
      	"bookid":1
  	}
  }
}

3.IAM attach AmazonDynamoDBFullAccess policy( Create function-->Blue print-->simple-mobile-backend)

4.Amazon API Gateway- Mostly used by developers.( input in API gateway moved dynamodb using lamda called EVENTS Data)


Select REST API --> lambda,Aws services--> build

Create Rest API--> Action - Create Resources->

Create PUT and POST integrate with lamda

Test the connection once done.
Deploye API- By selecting root from ACTIONS-NewStage


DAY 23

